# Generated by Django 4.2.3 on 2023-07-20 18:29

from django.db import migrations
from django.contrib.auth.models import Permission, Group
from django.contrib.contenttypes.models import ContentType

from university.education.models import Disciplines, Specialties, Students, StudentGroups


def forwards_func(apps, schema_editor):
    content_type_model: type[ContentType] = apps.get_model("contenttypes", "ContentType")

    auth_group_model: type[Group] = apps.get_model("auth", "Group")
    auth_permission_model: type[Permission] = apps.get_model("auth", "Permission")

    specialties_model: Specialties = apps.get_model("education", "Specialties")
    disciplines_model: Disciplines = apps.get_model("education", "Disciplines")
    students_model: Students = apps.get_model("education", "Students")
    student_groups_model: StudentGroups = apps.get_model("education", "StudentGroups")

    # create admin role and add permissions for Specialties and Disciplines
    admin_role = auth_group_model.objects.create(name="admin")

    specialties_permissions = auth_permission_model.objects.filter(
        content_type=content_type_model.objects.get_for_model(specialties_model)
    )
    disciplines_permissions = auth_permission_model.objects.filter(
        content_type=content_type_model.objects.get_for_model(disciplines_model)
    )
    admin_role.permissions.add(*specialties_permissions)
    admin_role.permissions.add(*disciplines_permissions)

    # create curator role and add permissions for Students and StudentGroups
    curator_role = auth_group_model.objects.create(name="curator")

    students_permissions = auth_permission_model.objects.filter(
        content_type=content_type_model.objects.get_for_model(students_model)
    )
    student_groups_permissions = auth_permission_model.objects.filter(
        content_type=content_type_model.objects.get_for_model(student_groups_model)
    )
    curator_role.permissions.add(*students_permissions)
    curator_role.permissions.add(*student_groups_permissions)


def reverse_func(apps, schema_editor):
    auth_group_model = apps.get_model("auth", "Group")
    auth_group_model.objects.filter(name__in=["admin", "curator"]).delete()


class Migration(migrations.Migration):
    dependencies = [
        ('education', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]